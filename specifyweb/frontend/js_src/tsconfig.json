{
  /* File Inclusion */
  "include": ["**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules", "testBuild", "**/*.test.ts", "**/*.test.tsx"],
  "compilerOptions": {
    /* Basic Options */
    "isolatedModules": true,
    "jsx": "react",
    "lib": [
      "es6",
      "dom",
      "dom.iterable",
      "es2015",
      "es2016",
      "es2017",
      "es2018",
      "es2019",
      "es2020",
      "es2021",
      "esnext"
    ],
    /*
     * Don't pollute global namespace with Jest functions. Without this line,
     * typescript WILL NOT throw an error if you use a function like "test"
     * or "fail" OUTSIDE a test file. This results in runtime errors - BAD.
     *
     * You can explicitly specify exceptions under "types"
     */
    "typeRoots": [
    ],
    "types": [
      "leaflet.markercluster"
    ],
    "module": "CommonJS",
    "noEmit": true,
    "sourceMap": true,
    "target": "esnext",
    "allowJs": true,
    "checkJs": false,
    /**/
    /* Strict Checks */
    "strict": true,
    /**/
    /* Module Resolution */
    "esModuleInterop": true,
    "moduleResolution": "node",
    /**/
    /* Linter Checks */
    "noFallthroughCasesInSwitch": true,
    "noImplicitReturns": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    /**/
    /* Advanced */
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "skipLibCheck": true
    /* Projects */
    // REFACTOR: test performance improvements of enabling this:
    //    "composite": true
  },
  "noPropertyAccessFromIndexSignature": true
}
