import { f } from '../../utils/functools';
import type { IR } from '../../utils/types';
import { ensure } from '../../utils/types';
import { tables } from '../DataModel/tables';
import {
  autoGenerateViewDefinition,
  getFieldsForAutoView,
} from '../Forms/generateFormDefinition';
import type { ParsedFormDefinition } from './index';

/**
 * Definitions for front-end form views.
 *
 * @remarks
 * If a view is missing, it would be autogenerated, unless a custom definition
 * is specified in this file:
 */
export const webOnlyViews = f.store(() =>
  ensure<IR<ParsedFormDefinition>>()({
    /*
     * This is a special view that would be replaced by the <AttachmentPlugin />
     */
    [attachmentView]: {
      columns: [undefined],
      rows: [
        [
          {
            id: undefined,
            align: 'left',
            verticalAlign: 'stretch',
            colSpan: 1,
            visible: true,
            ariaLabel: tables.Attachment.label,
            type: 'Blank',
          },
        ],
      ],
    },
    CollectionRelationship: autoGenerateViewDefinition(
      tables.CollectionRelationship,
      'form',
      'edit',
      ['collectionRelType', 'leftSide', 'rightSide']
    ),
    [spAppResourceView]: autoGenerateViewDefinition(
      tables.SpAppResource,
      'form',
      'edit',
      ['name']
    ),
  } as const)
);

export const attachmentView = 'ObjectAttachment';

export const spAppResourceView = '_SpAppResourceView_name';
export const spViewSetNameView = '_SpViewSetObj_name';
export const recordSetView = '_RecordSet_name';
