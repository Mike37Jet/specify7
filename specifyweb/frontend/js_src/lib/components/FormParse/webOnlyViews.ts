import { f } from '../../utils/functools';
import type { IR } from '../../utils/types';
import { ensure } from '../../utils/types';
import {
  autoGenerateViewDefinition,
  getFieldsForAutoView,
} from '../Forms/generateFormDefinition';
import type { ParsedFormDefinition } from './index';
import { tables } from '../DataModel/tables';

/**
 * Definitions for front-end form views.
 *
 * @remarks
 * If a view is missing, it would be autogenerated, unless a custom definition
 * is specified in this file:
 */
export const webOnlyViews = f.store(() =>
  ensure<IR<ParsedFormDefinition>>()({
    ObjectAttachment: {
      columns: [undefined],
      rows: [
        [
          {
            id: undefined,
            type: 'Field',
            fieldNames: undefined,
            fieldDefinition: {
              isReadOnly: false,
              type: 'Plugin',
              pluginDefinition: {
                type: 'AttachmentPlugin',
              },
            },
            isRequired: false,
            colSpan: 1,
            align: 'left',
            visible: true,
            ariaLabel: undefined,
          },
        ],
      ],
    },
    SpecifyUser: autoGenerateViewDefinition(
      tables.SpecifyUser,
      'form',
      'edit',
      getFieldsForAutoView(tables.SpecifyUser, ['password', 'userType'])
    ),
    SpAppResource: autoGenerateViewDefinition(
      tables.SpAppResource,
      'form',
      'edit',
      getFieldsForAutoView(tables.SpAppResource, [
        'allPermissionLevel',
        'groupPermissionLevel',
        'level',
        'ownerPermissionLevel',
        'version',
        'group',
        'spAppResourceDir',
        'spAppResourceDatas',
        'spReports',
      ])
    ),
    // Hide non-name fields
    [spAppResourceView]: autoGenerateViewDefinition(
      tables.SpAppResource,
      'form',
      'edit',
      ['name']
    ),
    // Hide non-name fields
    [spViewSetNameView]: autoGenerateViewDefinition(
      tables.SpViewSetObj,
      'form',
      'edit',
      ['name']
    ),
    [recordSetView]: autoGenerateViewDefinition(
      tables.RecordSet,
      'form',
      'edit',
      ['name', 'remarks']
    ),
  } as const)
);

export const spAppResourceView = '_SpAppResourceView_name';
export const spViewSetNameView = '_SpViewSetObj_name';
export const recordSetView = '_RecordSet_name';
