import React from 'react';

import { welcomeText } from '../../localization/welcome';
import { f } from '../../utils/functools';
import { Async } from '../Router/RouterUtils';
import { defaultWelcomePageImage } from '../UserPreferences/Renderers';
import { usePref } from '../UserPreferences/usePref';
import { schema } from '../DataModel/schema';
import { TableIcon } from '../Molecules/TableIcon';
import { SvgIcon } from '../Molecules/SvgIcon';
import { getIcon } from '../InitialContext/icons';

const taxonTiles = f.store(() => (
  <Async
    element={async (): Promise<React.FunctionComponent> =>
      import('./TaxonTiles').then(({ TaxonTiles }) => TaxonTiles)
    }
    title={undefined}
  />
));

export function WelcomeView(): JSX.Element {
  const [mode] = usePref('welcomePage', 'general', 'mode');

  return (
    <div
      className={`
        mx-auto flex h-full max-w-[1000px] flex-col justify-center gap-4  p-4
      `}
    >
      <div
        className={`
          flex min-h-0 items-center justify-center
          ${mode === 'embeddedWebpage' ? 'h-5/6' : ''}
        `}
      >
        {mode === 'taxonTiles' ? taxonTiles() : <WelcomeScreenContent />}
      </div>
    </div>
  );
}

function WelcomeScreenContent(): JSX.Element {
  const [mode] = usePref('welcomePage', 'general', 'mode');
  const [source] = usePref('welcomePage', 'general', 'source');

  // FIXME: remove this
  return (
    <div className="flex h-full w-full flex-col gap-4 overflow-auto">
      <div>
        <p>First column: indicator of whether old icon is missing</p>
        <p>Second column: old icon</p>
        <p>Third column: new icon</p>
        <p>Fourth column: table name</p>
        <p>
          Fifth column: an example of what a completely autogenerated icon would
          look like (this would happen if we added new tables and forgot to
          define icons, or user specified invalid icon name in the form
          definition)
        </p>
      </div>
      {Object.values(schema.models).map(({ name }) => (
        <div className="flex gap-2" key={name}>
          <p className={getIcon(name) === undefined ? undefined : 'invisible'}>
            (missing)
          </p>
          <TableIcon name={name} label />
          <SvgIcon
            name={name}
            className="h-table-icon w-table-icon flex-shrink-0"
          />
          {name}
          <SvgIcon
            name={name}
            className="h-table-icon w-table-icon flex-shrink-0"
            autoGenerate
          />
        </div>
      ))}
    </div>
  );
  return mode === 'embeddedWebpage' ? (
    <iframe
      className="h-full w-full border-0"
      src={source}
      title={welcomeText.pageTitle()}
    />
  ) : mode === 'default' ? (
    defaultSplashScreen
  ) : (
    <img alt="" className="h-full" src={source} />
  );
}

const defaultSplashScreen = (
  <div className="relative">
    <div className="absolute top-0 h-full w-[20%] bg-[linear-gradient(to_right,var(--background),transparent)]" />
    <img alt="" className="w-[800px]" src={defaultWelcomePageImage} />
    <div className="absolute top-0 right-0 h-full w-[20%] bg-[linear-gradient(to_left,var(--background),transparent)]" />
  </div>
);
