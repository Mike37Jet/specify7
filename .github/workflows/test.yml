name: Tests

on: [push]

jobs:
  test:
    name: Run front-end and back-end tests
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: MasterUser
          MYSQL_PASSWORD: MasterPassword
          MYSQL_DATABASE: test_SpecifyDB
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: specifyweb/frontend/js_src/package-lock.json

      - name: Get Specify 6 from cache
        id: cache-specify6
        uses: actions/cache@v3
        with:
          path: Specify6
          key: specify6.8.01-cache

      - name: Install Specify 6
        if: steps.cache-specify6.outputs.cache-hit != 'true'
        run: |
          wget https://update.specifysoftware.org/6801/Specify_unix_64.sh
          sh Specify_unix_64.sh -q -dir ./Specify6

      - name: Patch Specify datamodel (Sam, you made the Attachment.origFilename too long)
        run: sed -i 's/name="origFilename" type="java.lang.String"/name="origFilename" type="text"/' ./Specify6/config/specify_datamodel.xml

      - name: Install ubuntu dependencies
        run: |
          sudo apt update
          sudo apt install -y libmysqlclient-dev libsasl2-dev libldap2-dev libssl-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv ve
          ve/bin/pip install -r requirements.txt

      - name: Install testing python dependencies
        run: ve/bin/pip install -r requirements-testing.txt

      - name: Create settings file
        run: |
          echo "THICK_CLIENT_LOCATION = '${{ github.workspace }}/Specify6'" >> specifyweb/settings/local_specify_settings.py
          echo "DATABASE_HOST = '127.0.0.1'" >> specifyweb/settings/local_specify_settings.py
          echo "DATABASE_PORT = ${{ job.services.mariadb.ports[3306] }}" >> specifyweb/settings/local_specify_settings.py

      - name: Need these files to be present
        run: make specifyweb/settings/build_version.py specifyweb/settings/secret_key.py

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: Run Mypy type checker
        run: VIRTUAL_ENV=./ve make typecheck

      - name: Run test suite
        run: ./ve/bin/python manage.py test -k

      - name: Build frontend
        run: make frontend

        # See https://jestjs.io/docs/troubleshooting#tests-are-extremely-slow-on-docker-andor-continuous-integration-ci-server
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Run JS test suite
        working-directory: specifyweb/frontend/js_src
        run: |
          npm run typecheck && \
          npm run unitTests -- --maxWorkers ${{ steps.cpu-cores.outputs.count }} && \
          npm run localizationTests --emit localization-strings

      - name: Upload built localization strings
        uses: actions/upload-artifact@v3
        with:
          name: Localization strings
          path: ./specifyweb/frontend/js_src/localization-strings

  sync-localization:
    name: Sync localization strings with Weblate (only on production branch)
    # FIXME: uncomment this:
    # if: github.ref == 'refs/heads/${{ github.event.repository.default_branch }}'
    if: github.ref == 'refs/heads/l10n-improvements'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Clone branch that stores localization strings
        uses: actions/checkout@v3
        with:
          directory: localization-strings
          branch: weblate-localization
          fetch-depth: 0

      - name: Delete old localization strings
        run: rm -rf localization-strings/strings

      - name: Download new strings
        uses: actions/download-artifact@v3
        with:
          name: Localization strings
          path: localization-strings/strings

      - name: Commit changed strings
        working-directory: localization-strings
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Sync localization strings with Weblate"
