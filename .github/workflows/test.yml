name: Tests

on: [push]

jobs:
  changes:
    name: Check if back-end or front-end files changed
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.back-end-check.outputs.changed }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - uses: actions/checkout@v3

      - name: Find all changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: escape
          filters: |
            frontend:
              - 'specifyweb/frontend/**'
            backend:
              - '**'

      - name: Check if any non-front-end files changed
        id: back-end-check
        run: |
          changed_files=`echo "${{steps.filter.outputs.backend_files}}" | tr " " "\n" | grep -v 'specifyweb/frontend/' || echo ""`
          echo "Changed back-end files: ${changed_files}"
          echo "changed=$([[ -z "${changed_files}" ]] && echo "0" || echo "1")" >> $GITHUB_OUTPUT

  test-back-end:
    name: Run back-end tests
    needs: changes
    if: needs.changes.outputs.backend_changed
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: MasterUser
          MYSQL_PASSWORD: MasterPassword
          MYSQL_DATABASE: test_SpecifyDB
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Get Specify 6 from cache
        id: cache-specify6
        uses: actions/cache@v3
        with:
          path: Specify6
          key: specify6.8.01-cache

      - name: Install Specify 6
        if: steps.cache-specify6.outputs.cache-hit != 'true'
        run: |
          wget https://update.specifysoftware.org/6801/Specify_unix_64.sh
          sh Specify_unix_64.sh -q -dir ./Specify6

      - name: Patch Specify datamodel (Sam, you made the Attachment.origFilename too long)
        run: sed -i 's/name="origFilename" type="java.lang.String"/name="origFilename" type="text"/' ./Specify6/config/specify_datamodel.xml

      - name: Install ubuntu dependencies
        run: |
          sudo apt update
          sudo apt install -y libmysqlclient-dev libsasl2-dev libldap2-dev libssl-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv ve
          ve/bin/pip install -r requirements.txt

      - name: Install testing python dependencies
        run: ve/bin/pip install -r requirements-testing.txt

      - name: Create settings file
        run: |
          echo "THICK_CLIENT_LOCATION = '${{ github.workspace }}/Specify6'" >> specifyweb/settings/local_specify_settings.py
          echo "DATABASE_HOST = '127.0.0.1'" >> specifyweb/settings/local_specify_settings.py
          echo "DATABASE_PORT = ${{ job.services.mariadb.ports[3306] }}" >> specifyweb/settings/local_specify_settings.py

      - name: Need these files to be present
        run: make specifyweb/settings/build_version.py specifyweb/settings/secret_key.py

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: Run Mypy type checker
        run: VIRTUAL_ENV=./ve make typecheck

      - name: Run test suite
        run: ./ve/bin/python manage.py test --keepdb

  test-front-end:
    name: Run front-end tests
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: specifyweb/frontend/js_src/package-lock.json

      - name: Build frontend
        run: make frontend

        # See https://jestjs.io/docs/troubleshooting#tests-are-extremely-slow-on-docker-andor-continuous-integration-ci-server
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Run JS test suite
        working-directory: specifyweb/frontend/js_src
        run: |
          npm run typecheck && \
          npm run unitTests -- --maxWorkers ${{ steps.cpu-cores.outputs.count }}

      - name: Localization Tests
        working-directory: specifyweb/frontend/js_src
        run: |
          npm run localizationTests -- --emit ./localization-strings

      - name: Clone branch that stores localization strings
        # Listen for changes to production branch
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        id: weblate
        uses: actions/checkout@v3
        with:
          path: weblate-localization
          ref: weblate-localization
          fetch-depth: 0

      - name: Sync localization strings with Weblate (only on production branch)
        # Only run this step if previous step was not skipped
        if: steps.weblate.outcome == 'success'
        working-directory: weblate-localization
        run: |
          # Replace old localization strings
          rm -rf strings
          mv -f ../specifyweb/frontend/js_src/localization-strings strings
          git add strings

          if git diff-index --quiet HEAD --; then
            echo "Localization strings are unchanged"
          else
            # Set the committer and author to the name and email of the person
            # who triggered the action
            git config --local user.name "${{ github.event.head_commit.author.name }}"
            git config --local user.email "${{ github.event.head_commit.author.email }}"
            git commit \
              --author 'github-actions <41898282+github-actions[bot]@users.noreply.github.com>' \
              -m 'Sync localization strings with Weblate' \
              -m "Triggered by ${{ github.sha }} on branch ${{ github.ref }}"
            git push
          fi

      - name: Make sure Weblate settings are up to date
        if: steps.weblate.outcome == 'success'
        working-directory: specifyweb/frontend/js_src
        env:
          WEBLATE_API_TOKEN: ${{ secrets.WEBLATE_API_TOKEN }}
        run: npm run validateWeblate
